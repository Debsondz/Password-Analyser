import re
import math

COMMON_PASSWORDS = [
    'password', '123456', '12345678', 'qwerty', 'abc123', 'iloveyou',
    'admin', 'welcome', 'monkey', 'login', '123456789', 'PASSWORD', 'password123'
]

def checkCommonPasswords(password):
    return password.lower() in COMMON_PASSWORDS

def calculateEntropy(password):
    unique_chars = len(set(password))
    if unique_chars == 0:
        return 0
    return round(math.log2(unique_chars) * len(password), 2)

def analyzePassword(password):
    length = len(password)
    hasUpper = bool(re.search(r'[A-Z]', password))
    hasLower = bool(re.search(r'[a-z]', password))
    hasDigit = bool(re.search(r'\d', password))
    hasSpecial = bool(re.search(r'[^A-Za-z0-9]', password))

    issues = []

    if length < 8:
        issues.append("Password is too short (use at least 8 characters).")
    if not hasUpper:
        issues.append("Include uppercase letters.")
    if not hasLower:
        issues.append("Include lowercase letters.")
    if not hasDigit:
        issues.append("Include digits.")
    if not hasSpecial:
        issues.append("Include special characters (!@#$ etc).")
    if checkCommonPasswords(password):
        issues.append("This password is too common. Kindly change the password.")

    entropy = calculateEntropy(password)

    score = sum([hasUpper, hasLower, hasDigit, hasSpecial]) + (length >= 12)

    if score <= 2 or entropy < 30:
        strength = "Weak"
    elif score == 3 or score == 4:
        strength = "Moderate"
    else:
        strength = "Strong"

    return {
        'password': password,
        'length': length,
        'entropy': entropy,
        'strength': strength,
        'issues': issues
    }

def print_analysis(result):
    print("\n_____ Password Analysis _____")
    print(f"Password: {'*' * len(result['password'])}")
    print(f"Length: {result['length']}")
    print(f"Entropy: {result['entropy']}")
    print(f"Strength: {result['strength']}")
    if result['issues']:
        print("\nWeaknesses / Suggestions:")
        for issue in result['issues']:
            print(f" - {issue}")
    else:
        print("Your password is strong.")

if __name__ == "__main__":
    print(" _____ Password Analyzer _____")
    user_input = input("Enter a password: ")
    analysis = analyzePassword(user_input)
    print_analysis(analysis)
